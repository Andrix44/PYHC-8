import os


class Chip8:
    memory = [None] * 4096
    V = [None] * 16 # Registers
    I = None
    pc = 0x200
    gfx = [None] * 64 * 32
    delay_timer = None
    sound_timer = None
    stack = [None] * 16
    sp = None
    key = [None] * 16

    font = [0xF0, 0x90, 0x90, 0x90, 0xF0, # Look into this
            0x20, 0x60, 0x20, 0x20, 0x70,
            0xF0, 0x10, 0xF0, 0x80, 0xF0,
            0xF0, 0x10, 0xF0, 0x10, 0xF0,
            0x90, 0x90, 0xF0, 0x10, 0x10,
            0xF0, 0x80, 0xF0, 0x10, 0xF0,
            0xF0, 0x80, 0xF0, 0x90, 0xF0,
            0xF0, 0x10, 0x20, 0x40, 0x40,
            0xF0, 0x90, 0xF0, 0x90, 0xF0,
            0xF0, 0x90, 0xF0, 0x10, 0xF0,
            0xF0, 0x90, 0xF0, 0x90, 0x90,
            0xE0, 0x90, 0xE0, 0x90, 0xE0,
            0xF0, 0x80, 0x80, 0x80, 0xF0,
            0xE0, 0x90, 0x90, 0x90, 0xE0,
            0xF0, 0x80, 0xF0, 0x80, 0xF0,
            0xF0, 0x80, 0xF0, 0x80, 0x80]

    def __init__(self, romname):
        for i in range(80):
            self.memory[i] = self.font[i]
        with open(romname, rb) as rom:
            for i in range(os.path.getsize(romname)):
                self.memory[512 + i] = ord(rom.read(1)) # Write all bytes into the memory

    def Cycle(self, key):
        opcode = (self.memory[self.pc] << 8 | self.memory[self.pc + 1])
        self.ExecInstr(opcode)
        if(self.delay_timer > 0):
            self.delay_timer -= 1
        if(self.sound_timer > 0):
            self.sound_timer -= 1

    def ExecInstr(self, opcode): # 10101010 10101010



